plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'checkstyle'
    id 'io.spring.javaformat' version '0.0.41'
}

checkstyle {
    toolVersion = "9.3"
}

group = 'dev.sijun-yang'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:0.0.41")
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

// 커밋 컨벤션을 지키기 위한 commit-msg 스크립트를 local git hook에 적용하는 task
// 새로운 환경에서 프로젝트를 열었을 때, commit-msg 스크립트를 적용하기 위해서 사용해야 함
tasks.register("addLocalGitHook") {
    println("Running Add commit-msg Git Hook Script on Build")
    exec {
        commandLine("cp", "${rootDir}/.github/hooks/commit-msg", "${rootDir}/.git/hooks/commit-msg")
    }
    exec {
        commandLine("chmod", "+x", "${rootDir}/.git/hooks/commit-msg")
    }
    println("Added commit-msg Git Hook Script.")
}
